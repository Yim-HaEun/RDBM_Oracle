DQL(Data Query Langauge)
데이터베이스에서 검색하고 조회하는데 사용
DQL SELECT문을 사용해서 데이터를 검색하고 필터링 하며 원하는 정보를 추출하는데 사용

종류
SELECT : 테이블에서 데이터를 선택하고 반환
        필드 목록,테이블 조건 및 정렬을 지정할 수 있음
FROM :  SELECT문에서 데이터를 검색할 대상 테이블을 지정
  예제코드)SELECT* FROM 테이블 명;

WHERE : 검색 결과를 필터링하기위한 조건을 지정 
        특정 조건을 충족하는 행만 반환
  예제코드) SELECT 보기원하는 열 작성
            FROM 테이블명
            WHERE 조건 작성;

GROUP BY :검색 결과를 그룹화하고 그룹 단위로 데이터를 집계할 때 사용
    예제코드)SELECT 열이름, AVG(열이름) AS 포시하고 싶은 열의 이름
            FROM 테이블명
            GROUP BY 집계할 열이름;
            HAVING AVG(열이름)> 10.0; --조건 지정
HAVING : GTOUP BY와 함께 사용되며, 그룹화된 데이터에 대한 조건 지정
ORDER BY : 검색 결과를 정렬하기 위해 사용
            정렬할 열 및 정렬 순서를 지정
    예제코드)SELECT 열이름
            FROM 테이블명
            ORDER BY 열이름 DESC; 
      --ASC :오름차순(Default 값)
      --DESC:내림차순

UNION    : 두개 이상의 SELECT문 결과르 결합해서 하나의 결과 집합으로 반환
      예제코드 ) SELECT 열이름 FROM 테이블1;
                UNION
                 SELECT 열이름 FROM 테이블2;

JOIN     :다수의 테이블을 연결하여 데이터를 결합하는데 사용
          INNER JOIN, OUTER JOIN,RIGHT JOIN,FULL OUTER JOIN 등 결합유형이 다양함
        예제코드) SELECT o.orderID,c.CName
                FROM Order o
                INNER JOIN Customers ON o.CID;

JOIN 내 다양한 JOIN문 설명 작성
  INNER JOIN : 데이터베이스에서 여러 테이블 간의 관계를 설정하고 데이터를 결합하는데 사용 두개 이상의 테이블을 연결하여 공통된 값을 기준으로 행을 결합
  LEFT JOIN  : 왼쪽 테이블(첫 테이블)의 모든 행을 포함 오른쪽 테이블에서 일치하는 행을 선택 왼쪽 테이블에 있는 모든 행이 결과 집합에 포함되고 오른쪽 테이블과 일치하는 행이 없으면 NUL값 포함
  RIGHT JOIN : 오른쪽 테이블으 ㅣ모든 행을 포함하고 왼쪽 테이블에서 일치하는 행을 선택 오른쪽 테이블에 있는 모든 행이 결과 집합에 포함  왼쪽 테이블과 일치하는 행이 없으면 NUL값 포함
  FULL JOIN (FULL OUTER JOIN) :
            왼쪽 테이블과 오른쪽 테이블의 모든 행을 포함
            양쪽 테이블의 데이터를 모두 가져옴
            일치하는 행이 있는 경우에는 해당 데이터를 포함 
            왼쪽 테이블 또는 오른쪽 테이블의 한쪽에만 있는 데이터는 NULL값이 포함됨
[예제코드]
--JOIN(=INNER JOIN) : 일치하는 행만 반환
--부서와 직원 테이블을 join하여 각 직원의 부서 정보를 가져옴
--EMPLOYEE e
SELECT e.ENO,e.ENAME, d.dname
FROM employee e
JOIN department d on e.dno = d.dno;

--LEFT JOIN : 왼쪽 테이블의 모든 행을 반환
--모든 부서와 부서에 속한 직원을 가져오기
--만약에 부서에 속한 직원이 없는 경우에는 부서 정보 포함하기
SELECT d.dno, d.dname, e.eno, e.ename
FROM department d
LEFT JOIN employee e on d.dno = e.eno;

--RIGHT JOIN : 오른쪽 테이블의 모든 행 반환
--모든 직원과 직원이 속한 부서 정보 가져오기
--부서에 속하지 않은 경우도 직원 정보 포함
SELECT e.eno, e.ename, d.dno, d.dname
FROM employee e
RIGHT JOIN department d on e.dno = d.dno;

--FULL JOIN : 양쪽 테이블의 모든 행을 반환
SELECT d.dno, d.dname, e.eno, e.ename
FROM department d
FULL JOIN employee ON d.dno = e.dno;
                

--NVL (Null Value) : null 값을 다른 값으로 대체
SELECT ename, nvl(commission,0) as commission
FROM employee;

--NEXT DAY 다음 주어진 요일 날짜 찾기
--SELECT ename, next_day(sysdate,'FRIDAY')as next day FROM dual;

--TRUNC : 날짜 또는 숫자의 소수부 제거
SELECT ENAME, TRUNC(salary) as Trunc_Salary FROM employee;

--Floor, CEIL, ROUND : 숫자 반올림 및 내림(버리고,올리고,반올림)
SELECT ename, floor(salary) AS FLOOR_SALARY FROM employee;
SELECT ename, CEIL(SALARY) AS CEIL_SALARY FROM emlployee;
SELECT ename, ROUND(salary,2)AS ROUND_SALARY FROM employee;
